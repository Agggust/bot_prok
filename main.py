import telebot
from telebot.types import KeyboardButton

import config

from db import *
from telebot import types
from newsapi import NewsApiClient
bot = telebot.TeleBot(config.token)
newsapi = NewsApiClient(api_key=config.api)

#–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@bot.message_handler(commands=['start'])
def welcome(message):
  text = '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã'
  user_id = message.chat.id
  user = getUser(user_id)
  print(user)

  if getUser(user_id) == None:
    insertUser(user_id)
    text = f"{message.from_user.first_name}, –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã\n –ß—Ç–æ –Ω—É–∂–Ω–æ?"

  sti = open('static/dog_with_burger.webp', 'rb')

  #keybords
  markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

  itemNews = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ üì∞')
  itemSubs = types.KeyboardButton('–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏ üì¨')
  itemCats = types.KeyboardButton('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ üßß')

  markup.add(itemCats, itemNews, itemSubs)

  bot.send_sticker(message.chat.id, sti)
  bot.reply_to(message, text,  reply_markup=markup)

# def makeButtons( arrObj, text = ''):
#   markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#   for i in arrObj:
#     markup.add(types.KeyboardButton(f"{text} {i[0]}"))
#
#   return markup

@bot.message_handler(content_types=['text'])
def work_bot(message):
  if message.chat.type == 'private':

    user_id = message.chat.id
    subs_user = getSubUser(user_id)
    categs = []
    for i in subs_user:
      categs.append(i[0])
    print(categs)
    # for i in subs_user:
    #   print(i)
    if message.text == '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ üßß':
      cats = getCategories()
      menu = types.KeyboardButton('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')
      markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
      markup.add(menu)
      for i in cats:
        print(type(i[0]))
        markup.add(types.KeyboardButton(f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {i[0]}"))

      bot.reply_to(message, '–≤–æ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',  reply_markup=markup)

    if message.text.startswith('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞'):
      cat = message.text[15:]
      cat_id = getIdCat(cat)[0]

#–ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –ø–æ–∫–∞ –Ω–µ—Ç
      if isSub(user_id, cat_id) == None:
        insertSub(user_id,cat_id)
        text = f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {cat}"
      else:
        text = f"–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {cat}"

      bot.reply_to(message, text)

    if message.text == '–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é':
      # keybords
      markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

      itemNews = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ üì∞')
      itemSubs = types.KeyboardButton('–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏ üì¨')
      itemCats = types.KeyboardButton('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ üßß')

      markup.add(itemCats, itemNews, itemSubs)

      bot.reply_to(message, "–ß—Ç–æ –Ω—É–∂–Ω–æ?", reply_markup=markup)
    #–º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    if message.text == '–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏ üì¨':

      subs = getSubUser(user_id)
      menu = types.KeyboardButton('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')
      markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
      markup.add(menu)
      for i in subs:
        print(type(i[0]))
        markup.add(types.KeyboardButton(f"–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç {i[0]}"))

      bot.reply_to(message, '–≤–æ—Ç –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏', reply_markup=markup)

    if message.text.startswith('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç'):
      sub = message.text[14:]
      cat_id = getIdCat(sub)
      print(cat_id)
      if isSub(user_id, cat_id) == None:
        text = f"–í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {sub}"
        bot.reply_to(message, text)
      else:
        delSub(user_id, cat_id)
        subs = getSubUser(user_id)
        menu = types.KeyboardButton('–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(menu)
        for i in subs:
          print(type(i[0]))
          markup.add(types.KeyboardButton(f"–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç {i[0]}"))
        bot.reply_to(message, f"–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç {sub}", reply_markup=markup)

    if message.text == '–ù–æ–≤–æ—Å—Ç–∏ üì∞':

      for a in categs:
        print(a)
        top_headlines = newsapi.get_top_headlines(category=f'{a}', language='ru', country='ru', page=1, page_size=3)
        print(top_headlines)
        i = 0
        while i<len(top_headlines):
          bot.send_message(message.chat.id,f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è:{a}\n {top_headlines["articles"][i]["title"]}\n {top_headlines["articles"][i]["url"]}')
          i=i+1


# @bot.message_handler(commands=['start'])
# def send_welcome(message):
#   bot.reply_to(message, "Howdy, how are you doing?",)
#
#
# @bot.message_handler(commands=['help'])
# def send_welcome(message):
#   bot.reply_to(message,  message.from_user.first_name + " " + message.from_user.first_name + ", —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å",)
#
#
bot.infinity_polling()